package com.tservice.tserviceversion2;
// Generated 9/03/2015 11:00:56 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Postulante generated by hbm2java
 */
@Entity
@Table(name="Postulante"
    ,catalog="coswg2"
)
public class Postulante  implements java.io.Serializable {


     private int identificacion;
     private HojaDeVida hojaDeVida;
     private int aspiracionSalarial;
     private String nombre;
     private Date fechaNacimiento;
     private String correo;
     private String direccion;
     private String telefono;
     private String pais;
     private String region;
     private String ciudad;
     private Set<Oferta> ofertas = new HashSet(0);
     private Set<Oferta> ofertas_1 = new HashSet(0);
     private Set<Interes> intereses = new HashSet(0);
     private Set<ExperienciaLaboral> experienciaLaborals = new HashSet(0);

    public Postulante() {
    }

	
    public Postulante(int identificacion, HojaDeVida hojaDeVida, int aspiracionSalarial, String nombre, Date fechaNacimiento, String correo, String direccion, String telefono, String pais, String region, String ciudad) {
        this.identificacion = identificacion;
        this.hojaDeVida = hojaDeVida;
        this.aspiracionSalarial = aspiracionSalarial;
        this.nombre = nombre;
        this.fechaNacimiento = fechaNacimiento;
        this.correo = correo;
        this.direccion = direccion;
        this.telefono = telefono;
        this.pais = pais;
        this.region = region;
        this.ciudad = ciudad;
    }
    public Postulante(int identificacion, HojaDeVida hojaDeVida, int aspiracionSalarial, String nombre, Date fechaNacimiento, String correo, String direccion, String telefono, String pais, String region, String ciudad, Set<Oferta> ofertas, Set<Oferta> ofertas_1, Set<Interes> intereses, Set<ExperienciaLaboral> experienciaLaborals) {
       this.identificacion = identificacion;
       this.hojaDeVida = hojaDeVida;
       this.aspiracionSalarial = aspiracionSalarial;
       this.nombre = nombre;
       this.fechaNacimiento = fechaNacimiento;
       this.correo = correo;
       this.direccion = direccion;
       this.telefono = telefono;
       this.pais = pais;
       this.region = region;
       this.ciudad = ciudad;
       this.ofertas = ofertas;
       this.ofertas_1 = ofertas_1;
       this.intereses = intereses;
       this.experienciaLaborals = experienciaLaborals;
    }
   
     @Id 

    
    @Column(name="Identificacion", unique=true, nullable=false)
    public int getIdentificacion() {
        return this.identificacion;
    }
    
    public void setIdentificacion(int identificacion) {
        this.identificacion = identificacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="HojaDeVida_Id", nullable=false)
    public HojaDeVida getHojaDeVida() {
        return this.hojaDeVida;
    }
    
    public void setHojaDeVida(HojaDeVida hojaDeVida) {
        this.hojaDeVida = hojaDeVida;
    }

    
    @Column(name="AspiracionSalarial", nullable=false)
    public int getAspiracionSalarial() {
        return this.aspiracionSalarial;
    }
    
    public void setAspiracionSalarial(int aspiracionSalarial) {
        this.aspiracionSalarial = aspiracionSalarial;
    }

    
    @Column(name="Nombre", nullable=false, length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Fecha_Nacimiento", nullable=false, length=10)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }
    
    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    
    @Column(name="Correo", nullable=false, length=45)
    public String getCorreo() {
        return this.correo;
    }
    
    public void setCorreo(String correo) {
        this.correo = correo;
    }

    
    @Column(name="Direccion", nullable=false, length=45)
    public String getDireccion() {
        return this.direccion;
    }
    
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    
    @Column(name="Telefono", nullable=false, length=45)
    public String getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    
    @Column(name="Pais", nullable=false, length=45)
    public String getPais() {
        return this.pais;
    }
    
    public void setPais(String pais) {
        this.pais = pais;
    }

    
    @Column(name="Region", nullable=false, length=45)
    public String getRegion() {
        return this.region;
    }
    
    public void setRegion(String region) {
        this.region = region;
    }

    
    @Column(name="Ciudad", nullable=false, length=45)
    public String getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="postulante")
    public Set<Oferta> getOfertas() {
        return this.ofertas;
    }
    
    public void setOfertas(Set<Oferta> ofertas) {
        this.ofertas = ofertas;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="Oferta_has_Postulante", catalog="coswg2", joinColumns = { 
        @JoinColumn(name="Identificacion", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Oferta_id", nullable=false, updatable=false) })
    public Set<Oferta> getOfertas_1() {
        return this.ofertas_1;
    }
    
    public void setOfertas_1(Set<Oferta> ofertas_1) {
        this.ofertas_1 = ofertas_1;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="postulante")
    public Set<Interes> getIntereses() {
        return this.intereses;
    }
    
    public void setIntereses(Set<Interes> intereses) {
        this.intereses = intereses;
    }

@OneToMany(fetch=FetchType.LAZY)
@JoinColumn(name="Postulante_Identificacion", nullable=false)
    public Set<ExperienciaLaboral> getExperienciaLaborals() {
        return this.experienciaLaborals;
    }
    
    public void setExperienciaLaborals(Set<ExperienciaLaboral> experienciaLaborals) {
        this.experienciaLaborals = experienciaLaborals;
    }




}


